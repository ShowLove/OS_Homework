3 processes
Using First Come First Served

Time 0: P1 arrived
Time 0: P1 selected (burst 24)
Time 3: P2 arrived
Time 4: P3 arrived
Time 24: P1 finished
Time 24: P2 selected (burst 3)
Time 27: P2 finished
Time 27: P3 selected (burst 3)
Time 30: P3 finished
Finished at time 30

P1 wait 0 turnaround 24
P2 wait 21 turnaround 24
P3 wait 23 turnaround 26

///////////////////////////////////////
1.	P1 arrived; print P1

2.	Print all that arrive before (P1-1) is finished
		P cant be finished because (P-1) isn't finished
		P can only be selected next because it's first come first serve

print (P1-1) finished

print P1 selected

print all that arrive before P1 Finished

print P1 finished

go to next arrived in the queue and start over

/////////////////////////////////////////
Can two things arrive at the same time?

A = arrived,  S = selected, F = finished

for P:  A before S
(P-1) F befor P(S)

1. search p-1 for a finish ("you have arrival")
2. search for p finished ("if you find it you have selected")
